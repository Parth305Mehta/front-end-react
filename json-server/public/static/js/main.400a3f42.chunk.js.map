{"version":3,"sources":["components/LoadingComponent.js","share/baseUrl.js","components/DishdetailComponent.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/leaders.js","redux/promotions.js","redux/comments.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderDish","props","dish","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","CardText","description","RenderComments","comments","postComment","dishId","commentsData","map","comment","key","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","this","setState","values","console","log","JSON","stringify","alert","rating","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","handleSubmit","Row","Label","htmlFor","md","Col","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","value","color","Component","DishDetail","isLoading","errMess","Breadcrumb","BreadcrumbItem","to","active","RenderMenuItem","width","CardImgOverlay","Menu","menu","dishes","Header","isNavOpen","toggleNav","handleLogin","event","username","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","size","offset","checkbox","About","RenderLeader","leaders","Media","left","body","heading","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","exact","match","parseInt","params","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Leaders","Promotions","Comments","concat","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.400a3f42.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className='col-12'>\n            <span className='fa fa-spinner fa-pulse fa-3x fa-fw text-primary'></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle ,Breadcrumb,BreadcrumbItem,Input,Button,Modal,ModalHeader,ModalBody,Label,Form,Col,Row,FormFeedback,FormGroup} from 'reactstrap';\nimport {Control,LocalForm,Errors} from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport {baseUrl} from '../share/baseUrl';\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\n\n\n/*Class Component*/\n/*class DishDetail extends Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount(){\n        console.log('Menu CoomponentDidMount invoked');\n    }\n\n    componentDidUpdate(){\n        console.log('DishDetail ComponentDidUpdate invoked');\n    }\n    renderDish(dish) {\n        if (dish != null){\n            return(\n                \n                    <Card>\n                        <CardImg  src={dish.image} alt={dish.name} />\n                        <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n            \n            );\n\n        }\n        else{\n            return(\n                <div></div>\n            );\n        }\n    }\n\n    renderComments(comments) {\n        if (comments != null) {\n          const commentsData = comments.map((comment) => {\n            return (\n              <li key={comment.id}>\n                <p>{comment.comment}</p>\n                <p>\n                  -- {comment.author} ,\n                  {new Intl.DateTimeFormat(\"en-US\", {\n                    year: \"numeric\",\n                    month: \"long\",\n                    day: \"2-digit\",\n                  }).format(new Date(Date.parse(comment.date)))}\n                </p>\n              </li>\n            );\n          });\n          return (\n            <div >\n              <h4>Comments</h4>\n              <ul className=\"list-unstyled\">{commentsData}</ul>\n            </div>\n          );\n        } else {\n          return <div></div>;\n        }\n      }\n\n    render() {\n        console.log('DishDetail component Render invoked');\n        const dish = this.props.dish;\n    if (dish == null) {\n      return <div></div>;\n    }\n    const renDish = this.renderDish(dish);\n    const renComment = this.renderComments(dish.comments);\n    return (\n      <div class='container'>\n        <div class='row'>\n            <div className=\" col-12 col-md-5 m-1\">  \n                {renDish}\n            </div>\n            <div className='col-12 col-md-5 m-1' >\n                {renComment}\n            </div>\n        </div>\n      </div>\n    );\n  }\n}*/\n\n\n/*Functional Component*/\nfunction RenderDish(props){\n        if (props.dish != null){\n            return(\n                <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                    <Card>\n                        <CardImg  src={baseUrl + props.dish.image} alt={props.dish.name} />\n                        <CardBody>\n                        <CardTitle>{props.dish.name}</CardTitle>\n                        <CardText>{props.dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>\n            );\n\n        }\n        else{\n            return(\n                <div></div>\n            );\n        }\n    }\n\n    function RenderComments({comments,postComment,dishId}) {\n        if (comments != null) {\n          const commentsData = comments.map((comment) => {\n            return (\n                <Fade in>\n                    <li key={comment.id}>\n                        <p>{comment.comment}</p>\n                        <p>\n                            -- {comment.author} ,\n                            {new Intl.DateTimeFormat(\"en-US\", {\n                                year: \"numeric\",\n                                month: \"long\",\n                                day: \"2-digit\",\n                            }).format(new Date(Date.parse(comment.date)))}\n                        </p>\n                    </li>\n                </Fade>\n            );\n          });\n          return (\n            <div >\n              <h4>Comments</h4>\n              <ul className=\"list-unstyled\">{commentsData}</ul>\n              \n              <CommentForm dishId={dishId} postComment={postComment}/>\n              \n            </div>\n          );\n        } else {\n          return <div></div>;\n        }\n      }\n\n      const DishDetail = (props) => {\n\n        \n        console.log('DishDetail component Render invoked');\n        const dish = props.dish;\n        if (props.isLoading) {\n            return (\n                <div className='container'>\n                    <div className='row'>\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n\n        else if (props.errMess) {\n            return (\n                <div className='container'>\n                    <div className='row'>\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n    \n    else if(props.dish != null ){\n    return (\n    <div className='container'>\n      <div className='row'>\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to ='/menu'>Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className='col-12'>\n                    <h3>{props.dish.name}</h3>\n                    <hr />\n                </div>\n            </div>\n        <div className='row'>\n            <div className=\" col-12 col-md-5 m-1\">  \n                <RenderDish dish={props.dish} />\n            </div>\n            <div className='col-12 col-md-5 m-1' >\n                <Stagger in>\n                    <RenderComments comments={props.comments} postComment = {props.postComment} dishId={props.dish.id}/>\n                </Stagger>   \n            </div>\n            \n        </div>\n    </div>\n    );\n  }\n\n  else{\n      return(\n        <div></div>\n      );\n  }\n}\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\n  class CommentForm extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n    \n    }\n    \n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n    \n    \n    \n    handleSubmit(values){\n        console.log(\"Current state is :\" +JSON.stringify(values));\n        alert(\"Current state is :\" +JSON.stringify(values));\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n       \n        \n    }\n    \n        render(){\n            return(\n             \n          <div>\n              \n              <Button outline  className='btn btn-default ' onClick={this.toggleModal}>\n              <span className='fa fa-pencil fa-lg'></span>Submit Comment\n            </Button>\n             \n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                              <Label htmlFor='rating' md={12} >Rating</Label>\n                                <Col md={12}>\n                                  <Control.select model='.rating' name=\"rating\" id='rating' className='col-12'>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                  </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='author' md={12} >Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model='.author'  id='author' name='author' placeholder='Your Name' className='form-control' validators={{\n                                        required,minLength:minLength(3),maxLength:maxLength(15)\n                                    }}\n                                    />\n                                    <Errors className='text-danger' model='.name' show='touched' messages={{\n                                        required:'Required ',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength:'Must be 15 characters or less'\n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                              <Label htmlFor='comment'  md={12}>Comment</Label>\n                              <Col md={12}>\n                                  <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                    rows=\"6\" className='form-control'\n                                ></Control.textarea>\n                                \n                                <Errors className='text-danger' model='.comment' show='touched' messages={{\n                                              required:'Required '\n                                              \n                                }}/>\n                              </Col>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n              </div>\n               \n            );\n        }\n    }\n\n\n\n\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle , Breadcrumb,BreadcrumbItem} from 'reactstrap';\nimport DishDetail from './DishdetailComponent';\nimport { functionExpression } from '@babel/types';\nimport {Link} from 'react-router-dom';\nimport { Loading} from './LoadingComponent';\nimport {baseUrl} from '../share/baseUrl';\n/*Class Component*/\n/*class Menu extends Component {\n    constructor(props) {\n        super(props);\n       this.state = {\n            selectedDish: null\n        }\n}\n\n    onDishSelect(dish) {\n        this.setState({ selectedDish: dish});\n    }\n\n\n    render() {\n        const menu = this.props.dishes.map((dish) => {\n            return (\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <Card onClick={() => this.props.onClick(dish.id)}> \n                  <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n                  <CardImgOverlay>\n                      <CardTitle>{dish.name}</CardTitle>\n                  </CardImgOverlay>\n                </Card>\n              </div>\n            );\n        });\n\n        return (\n          <div className=\"container\">\n             <div className=\"row\">\n                    {menu}\n             </div>\n\n             \n          </div>\n        );\n    }\n} */\n\n\n\n/*Functional component*/\nfunction RenderMenuItem(props) {\n    return(\n        <Card>\n        <Link to= {`/menu/${props.dish.id}`}> \n        <CardImg width=\"100%\" src={baseUrl + props.dish.image} alt={props.dish.name} />\n        <CardImgOverlay>\n            <CardTitle>{props.dish.name}</CardTitle>\n        </CardImgOverlay>\n        </Link>\n    </Card> \n    );\n}\n\nconst Menu = (props) =>{\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish}  />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n\n    else if (props.dishes.errMess) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    \n    else\n        return (\n        <div className=\"container\">\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to ='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n}\n\n\nexport default Menu;\n\n\n/* ====Component structure====\nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            \n        );\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\nonClick={() => this.onDishSelect(dish)}\n\n\n             <DishDetail dish={this.state.selectedDish} />\n*/\n\n/*\n        onClick={() => props.onClick(props.dish.id)}\n        \n        onClick={props.onClick}\n        */","\n\nimport React,{Component, Fragment} from 'react';\nimport { Navbar, NavbarBrand ,Jumbotron,Nav,NavbarToggler,Collapse,NavItem,Modal,Button,ModalHeader,ModalBody, FormGroup,Input,Label,Form} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends  Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isNavOpen : false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav(){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value +\n        \" Remember: \" +this.remember.checked);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n            <Navbar dark expand='md'>\n                <div className=\"container\">\n                <NavbarToggler onClick={this.toggleNav} />\n                    <NavbarBrand className='mr-auto' href=\"/\">\n                    <img src='assets/images/logo.png' height='30' width='41' alt='Ristorante Con Fusion ' />\n                    </NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                    <Nav navbar>\n                        <NavItem>\n                            <NavLink className='nav-link' to='/home'>\n                            <span className='fa fa-home fa-lg'></span>Home\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className='nav-link' to='/about'>\n                            <span className='fa fa-info fa-lg'></span>About Us\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className='nav-link' to='/menu'>\n                            <span className='fa fa-list fa-lg'></span>Menu\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className='nav-link' to='/contactus'>\n                            <span className='fa fa-address-card fa-lg'></span>Contact Us\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <Nav className='ml-auto' navbar>\n                        <NavItem>\n                            <Button outline onClick={this.toggleModal} >\n                                <span className='fa fa-sign-in fa-lg'></span>Login\n                            </Button>\n                        </NavItem>\n                    </Nav>\n                    </Collapse>\n                </div>\n            </Navbar>\n            <Jumbotron>\n                <div className='container'>\n                    <div className='row row-header'>\n                        <div className='col-12 col-sm-6'>\n                            <h1>Ristorante Con Fusion</h1>\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                        <FormGroup>\n                            <Label htmlFor='username'>Username</Label>\n                            <Input type='text' id='username' name='username' innerRef={(input) =>this.username=input}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label htmlFor='password'>Password</Label>\n                            <Input type='password' id='password' name='password' innerRef={(input) =>this.password=input}/>\n                        </FormGroup>\n                        <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Login</Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n            </React.Fragment> \n        );\n    }\n}\n\nexport default Header;\n\n","import React,{Component, Fragment} from 'react';\nimport { Navbar, NavbarBrand ,Jumbotron} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nfunction Footer(props){\n    return(\n        <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to='/home'>Home</Link></li>\n                        <li><Link to='/aboutus'>About Us</Link></li>\n                        <li><Link to='/menu'>Menu</Link></li>\n                        <li><Link to='/contactus'>Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default Footer","import React from 'react';\nimport {Card,CardImg,CardText,CardBody,CardTitle,CardSubtitle} from 'reactstrap';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../share/baseUrl';\nimport {FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item,isLoading,errMess}){\n    if(isLoading){\n        return(\n            <Loading />\n        );\n    }\n    else if(errMess){\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n\n    else\n        return(\n            <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle><strong>{item.name}</strong></CardTitle>\n                        {item.designation ? <CardSubtitle><strong>{item.designation}</strong></CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n}\n\nfunction Home(props){\n    return(\n        <div className='container'>\n            <div className='row align-items-start'>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading}  errMess={props.dishesErrMess}/>\n                </div>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading}  errMess={props.promosErrMess}/>\n                </div>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading}  errMess={props.leadersErrMess}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React,{Component} from 'react';\nimport {Breadcrumb,BreadcrumbItem,Button,FormGroup,Label,Input,Col,Row,FormFeedback} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control,Errors,Form,actions,LocalForm} from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport {baseUrl} from '../share/baseUrl';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n/*function Contact(props) {\n    return(\n        <div className=\"container\">\n            <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to ='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n} */\n\n\nclass Contact extends Component{\n\n\n    constructor(props){\n        super(props);\n        /*this.state={\n            firstname: '',\n            lastname:'',\n            telnum: '',\n            email:'',\n            agree: false,\n            contactType: 'Tel.',\n            message:'',\n            touched:{\n                firstname: false,\n                lastname:false,\n                telnum:false,\n                email:false\n            }\n        } */\n       /* this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this); */\n    }\n\n/*handleInputChange(event){\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n      });\n}*/\n\n/*handleSubmit(event){\n    console.log(\"Current state is :\" +JSON.stringify(this.state));\n    alert(\"Current state is :\" +JSON.stringify(this.state));\n    event.preventDefault();\n}*/\n\nhandleSubmit(values){\n    console.log(\"Current state is :\" +JSON.stringify(values));\n    alert(\"Current state is :\" +JSON.stringify(values));\n    this.props.resetFeedbackForm();\n    this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email,values.agree,values.contactType,values.message);\n\n    \n}\n\n/*handleBlur  = (field) => (evt) => {\n    this.setState({\n        touched: {...this.state.touched,[field]:true}\n    });\n} */\n\n /*validate(firstname,lastname,telnum,email){\n    const errors = {\n            firstname: '',\n            lastname:'',\n            telnum: '',\n            email:'',\n    };\n\n    if(this.state.touched.firstname && firstname.length < 3 )\n        errors.firstname = 'First Name should be >= 3 characters';\n    else if (this.state.touched.firstname && firstname.length > 10 )\n    errors.firstname = 'First Name should be <= 10 characters';\n\n\n    if(this.state.touched.lastname && lastname.length < 3 )\n        errors.lastname = 'Last Name should be >= 3 characters';\n    else if (this.state.touched.lastname && lastname.length > 10 )\n        errors.lastname = 'Last Name should be <= 10 characters';\n\n\n    const reg = /^\\d+$/;\n    if(this.state.touched.telnum && !reg.test(telnum))\n        errors.telnum = 'Tel.Number should contain only numbers';\n\n    if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\n        errors.email = 'Email should contain @ sign';\n\n\n    return errors;\n} */\n\n    render() {\n       /* const errors = this.validate(this.state.firstname,this.state.lastname,this.state.telnum,this.state.email); */\n        return(\n            <div className=\"container\">\n                <div className='row'>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to ='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className='col-12'>\n                            <h3>Contact Us</h3>\n                            <hr />\n                        </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className='row row-content'>\n                    <div className='col-12'>\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className='col-12 col-md-9'>\n                        <Form  model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                                <Label htmlFor='firstname' md={2} >First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model='.firstname'  id='firstname' name='firstname' placeholder='First Name' className='form-control' validators={{\n                                        required,minLength:minLength(3),maxLength:maxLength(15)\n                                    }}/>\n                                    <Errors className='text-danger' model='.firstname' show='touched' messages={{\n                                        required:'Required ',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength:'Must be 15 characters or less'\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='lastname' md={2} >Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model='.lastname' id='lastname' name='lastname' placeholder='Last Name' className='form-control' validators={{\n                                        required,minLength:minLength(3),maxLength:maxLength(15)\n                                    }}/>\n                                    <Errors className='text-danger' model='.lastname' show='touched' messages={{\n                                        required:'Required ',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength:'Must be 15 characters or less'\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        className='form-control'\n                                        validators={{\n                                            required,minLength:minLength(3),maxLength:maxLength(15),isNumber\n                                        }}\n                                        />\n                                        <Errors className='text-danger' model='.telnum' show='touched' messages={{\n                                            required:'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength:'Must be 15 characters or less',\n                                            isNumber:'Should contains only integers',\n                                        }}/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className='form-control'\n                                        validators={{\n                                            required,validEmail\n                                        }}\n                                        />\n                                        <Errors className='text-danger' model='.email' show='touched' messages={{\n                                            required:'Required ',\n                                            validEmail:'Invalid Email Address'\n                                        }}/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className='form-check'>\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                                name=\"agree\"\n                                                className='form-check-input'\n                                                /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                            className='form-control'>\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\" className='form-control'\n                                        ></Control.textarea>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\" value='submit'>\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n\n\n/*<FormFeedback>\n                                        {errors.}\n                                    </FormFeedback> \n                                    \n                                    \n                                    \n                                    \nvalue={this.state.firstname} onChange={this.handleInputChange} onBlur={this.handleBlur('firstname')} valid={errors.firstname === ''} invalid={errors.firstname !== '' }         \n\n<LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n*/","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport {baseUrl} from '../share/baseUrl';\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\n\n\nfunction About(props) {\n\n    \nconst RenderLeader= props.leaders.map((leader) =>{\n        return(\n            <Fade in>\n                <Media>\n                    <Media left className='m-3 mt-4'>\n                        <img src= {baseUrl + leader.image} alt={leader.name} />\n                    </Media>\n                    <Media body className='m-1 mt-4'>\n                        <Media heading>\n                            <strong>{leader.name}</strong>\n                        </Media>\n                        <Media heading>\n                            {leader.designation}\n                        </Media>\n                        {leader.description}\n                    </Media>\n                </Media>\n            </Fade>\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <Stagger in>\n                            { RenderLeader  }\n                        </Stagger>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About; \n\n\n\n\n/*const leaders = props.leaders.map((leader) => {\n        return (\n            <p>Leader {leader.name}</p>\n        );\n    });*/","import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../share/dishes';\n/*import { dispatch } from 'rxjs/internal/observable/range'; */\nimport { baseUrl } from '../share/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload:  comment /*{\n        dishId:dishId,\n        rating:rating,\n        author:author,\n        comment:comment\n    } */\n});\n\nexport const postComment = (dishId,rating,author,comment) => (dispatch) => {\n    const newComment = {\n        dishId:dishId,\n        rating:rating,\n        author:author,\n        comment:comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method:'POST',\n        body:JSON.stringify(newComment),\n        headers:{\n            'Content-Type' : 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText)\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n        \n    \n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    /*setTimeout(() => {\n        dispatch(addDishes(DISHES));\n    }, 2000); */\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type : ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes \n});\n\n\nexport const fetchComments = () => (dispatch) => {\n\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments \n});\n\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type : ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos \n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n    \n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type : ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders \n});\n\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload:  feedback \n});\n\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\n    const newFeedback = {\n        firstname:firstname,\n        lastname:lastname,\n        telnum:telnum,\n        email:email,\n        agree:agree,\n        contactType:contactType,\n        message:message,\n    }\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method:'POST',\n        body:JSON.stringify(newFeedback),\n        headers:{\n            'Content-Type' : 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText)\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => dispatch(addFeedback(response)))\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\n        \n    \n}","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport { DISHES } from '../share/dishes';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport {Switch,Route,Redirect,withRouter} from 'react-router-dom';\nimport Contact from './ContactComponent';\nimport { COMMENTS } from '../share/comments';\nimport { PROMOTIONS } from '../share/promotions';\nimport { LEADERS } from '../share/leaders';\nimport About from './AboutComponent';\nimport { connect } from 'react-redux';\nimport { postComment,fetchDishes ,fetchPromos,fetchComments,fetchLeaders,postFeedback} from '../redux/ActionCreators';\nimport {actions} from 'react-redux-form';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nconst mapStateToProps = state =>{\n  return{\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders:state.leaders\n\n  }   \n}\n\nconst mapDispatchToProps = (dispatch) =>({\n  postComment:(dishId,rating,author,comment) => dispatch(postComment(dishId,rating,author,comment)),\n  fetchDishes: () => {dispatch(fetchDishes())},\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  postFeedback:(firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message)),\n});\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n   /*  this.state = {\n       dishes: DISHES,\n        comments: COMMENTS,\n        promotions:PROMOTIONS,\n        leaders:LEADERS \n        \n    }; */\n  }\n\ncomponentDidMount() {\n  this.props.fetchDishes();\n  this.props.fetchComments();\n  this.props.fetchPromos();\n  this.props.fetchLeaders();\n}  \n\n  \n  render() {\n\n    const HomePage = () =>{\n      return(\n        <Home dish={this.props.dishes.dishes.filter((dish) =>dish.featured)[0]}\n        dishesLoading = {this.props.dishes.isLoading}\n        dishesErrMess = {this.props.dishes.errMess}\n        promotion={this.props.promotions.promotions.filter((promos) =>promos.featured)[0]}\n        promosLoading={this.props.promotions.isLoading}\n        promosErrMess={this.props.promotions.errMess}\n        leader={this.props.leaders.leaders.filter((leader) =>leader.featured)[0]}\n        leadersLoading = {this.props.leaders.isLoading}\n        leadersErrMess = {this.props.leaders.errMess}\n        />\n      );\n    }\n\nconst DishWithId = ({match}) => {\n  return(\n    <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n    isLoading = {this.props.dishes.isLoading}\n    errMess = {this.props.dishes.errMess}\n    comments={this.props.comments.comments.filter((comment) =>comment.dishId === parseInt(match.params.dishId,10))}\n    errMess = {this.props.comments.errMess}\n    postComment = {this.props.postComment}\n    \n    />\n  );\n}\n\nconst Leader =() =>{\n  return(\n  <About leaders={this.props.leaders.leaders} />\n  );\n}\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n        <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\n            <Switch>\n              <Route path='/home' component={HomePage} />\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />  \n              <Route path='/menu/:dishId' component={DishWithId} />\n              <Route  path='/about' component={Leader}/>\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\n              <Redirect to='/home' />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n\n\n\n/*<Navbar dark color=\"primary\">\n          <div className=\"container\">\n            <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\n          </div>\n        </Navbar>*/\n\n\n\n\n        /* selectedDish: null*/\n\n\n        /*onDishSelect(dishId) {\n    this.setState({ selectedDish: dishId});\n  }\n*/\n\n\n/*<Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\n<DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />*/","/*import { DISHES } from '../share/dishes'; */\nimport * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading:true,\n    errmess:null,\n    dishes:[]\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading:false, errmess:null, dishes:action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading:true, errmess:null, dishes:[]};\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading:false, errmess:action.payload, dishes:[]};\n\n        default:\n          return state;\n      }\n};\n\n\n\n\n\n/*DISHES*/","/*import { LEADERS } from '../share/leaders';*/\nimport * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading:true,\n    errmess:null,\n    leaders:[]\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading:false, errmess:null, leaders:action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading:true, errmess:null, leaders:[]};\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading:false, errmess:action.payload, leaders:[]};\n        default:\n          return state;\n      }\n};","/*import { PROMOTIONS } from '../share/promotions'; */\nimport * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading:true,\n    errmess:null,\n    promotions:[]\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading:false, errmess:null, promotions:action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading:true, errmess:null, promotions:[]};\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading:false, errmess:action.payload, promotions:[]};\n        default:\n          return state;\n      }\n};","/*import { COMMENTS } from '../share/comments';*/\nimport * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess:null,\n    comments:[]\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading:false, errmess:null, comments:action.payload};\n        \n            case ActionTypes.DISHES_FAILED:\n                return {...state, isLoading:false, errmess:action.payload, comments:[]};\n        \n            case ActionTypes.ADD_COMMENT:\n                var comment = action.payload;\n                return {...state,comments: state.comments.concat(comment)};\n        default:\n          return state;\n      }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname:'',\n    telnum:'',\n    email:'',\n    agree: false,\n    contactType:'Tel.',\n    message:''\n}","import React from 'react';\n//import logo from './logo.svg';\nimport { Navbar,NavbarBrand } from 'reactstrap';\nimport Menu from './components/MenuComponent';\nimport DishDetail from './components/DishdetailComponent';\nimport './App.css';\nimport { DISHES } from './share/dishes';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\nfunction App() {\n  \n  return (\n    <Provider store={store} >\n      <BrowserRouter>\n        <div >\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n\n\n\n","import { createStore , combineReducers, applyMiddleware} from 'redux';\n/*import {initialState } from './reducer'; */\nimport {Dishes } from './dishes';\nimport {Leaders } from './leaders';\nimport {Promotions } from './promotions';\nimport {Comments } from './comments';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () =>{\n    /*const store = createStore(\n        Reducer,\n        initialState\n    );*/\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk,logger)\n    );\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}